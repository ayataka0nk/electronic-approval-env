version: "3"
services:
  postgres:
    image: postgres:13.2
    container_name: postgres
    volumes:
      - database:/var/lib/postgresql/data
      - ./initdb:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    networks:
      - postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      retries: 30

  pgadmin4:
    image: dpage/pgadmin4:5
    container_name: pgadmin
    ports:
      - 20080:80
    volumes:
      - pgadmin:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@dummy.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    networks:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy

  api:
    build:
      context: ./api
    volumes:
      - ./api-env:/temp/api-env
    networks:
      - postgres
      - application
    command: >
      bash -c '
        git config --global user.email "$GIT_USER_EMAIL" &&
        git config --global user.name "$GIT_USER_NAME" &&
        git clone -b $API_BRANCH https://github.com/ayataka0nk/electronic-approval-api.git &&
        cd electronic-approval-api &&
        cp /temp/api-env .env
        npm ci &&
        npm run dev
      '
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:3010/api/ping-test"]
      interval: 1s
      retries: 30
    depends_on:
      postgres:
        condition: service_healthy

  https-portal:
    image: steveltn/https-portal:1
    ports:
      - "80:80"
      - "3443:443"
    environment:
      STAGE: local
      DOMAINS: "localhost -> http://api:3010"
    volumes:
      - https-portal-data:/var/lib/https-portal
    networks:
      - application
    depends_on:
      api:
        condition: service_healthy

  view:
    build:
      context: ./view
    ports:
      - "23000:3000"
    volumes:
      - ./view-env:/temp/view-env
    command: >
      bash -c '
        git config --global user.email "$GIT_USER_EMAIL" &&
        git config --global user.name "$GIT_USER_NAME" &&
        git clone -b $VIEW_BRANCH https://github.com/ayataka0nk/electronic-approval-view.git &&
        cd electronic-approval-view &&
        cp /temp/view-env .env &&
        npm ci &&
        npm run dev
      '
    networks:
      - application

volumes:
  database:
    driver: local
  pgadmin:
    driver: local
  https-portal-data:
    driver: local

networks:
  application:
    driver: bridge
  postgres:
    driver: bridge
